name: PHP Composer

on:
  push:
    branches: [ master ]
  pull_request:
    types: [ready_for_review, synchronize, opened]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@v1
        with:
            php-version: "8.3"
            extensions: mbstring, dom, fileinfo, intl, gd, imagick, bcmath, soap, zip, pcov
            key: "extcache"

      - name: Cache extensions
        uses: actions/cache@v4
        with:
            path: ${{ steps.extcache.outputs.dir }}
            key: ${{ steps.extcache.outputs.key }}
            restore-keys: ${{ steps.extcache.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          extensions: mbstring, dom, fileinfo, intl, gd, imagick, bcmath, soap, zip, pcov
          coverage: pcov

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Get composer cache directory
        id: composer-cache-dir
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v4
        with:
            path: ${{ steps.composer-cache-dir.outputs.dir }}
            key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
            restore-keys: |
              ${{ runner.os }}-php-

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --no-suggest

        # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
        # Docs: https://getcomposer.org/doc/articles/scripts.md

      - name: Run test suite
        env:
          MERCADOPAGO_API_CLIENT_ID: ${{ secrets.MERCADOPAGO_API_CLIENT_ID }}
          MERCADOPAGO_API_CLIENT_SECRET: ${{ secrets.MERCADOPAGO_API_CLIENT_SECRET }}
          XDEBUG_MODE: coverage
        run: composer run-script test
